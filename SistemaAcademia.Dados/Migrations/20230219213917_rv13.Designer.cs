// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaAcademia.Dados;

#nullable disable

namespace SistemaAcademia.Dados.Migrations
{
    [DbContext(typeof(SistemaAcademiaDbContext))]
    [Migration("20230219213917_rv13")]
    partial class rv13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Aluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("DATE");

                    b.Property<string>("EstadoUF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PlanoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.AlunoTelefone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AlunoId")
                        .HasColumnType("bigint");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossuiWhatsApp")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("AlunosTelefones");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Exercicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Mensalidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AlunoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("IniciadoEm")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("TerminaEm")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Mensalidades");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Plano", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("CobradoMensalmente")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Dias")
                        .HasColumnType("bigint");

                    b.Property<int?>("MesesCobrados")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Planos");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Treino", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AlunoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<long>("NumeroAtualTreino")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroMaximoTreino")
                        .HasColumnType("bigint");

                    b.Property<bool>("ProximoTreino")
                        .HasColumnType("bit");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool>("UltimoTreino")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.TreinoExercicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ExercicioId")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroRepeticoes")
                        .HasColumnType("bigint");

                    b.Property<long>("NumeroSeries")
                        .HasColumnType("bigint");

                    b.Property<long>("TreinoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("TreinoId");

                    b.ToTable("TreinosExercicios");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Aluno", b =>
                {
                    b.HasOne("SistemaAcademia.Dados.Entidades.Plano", "Plano")
                        .WithMany("Alunos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.AlunoTelefone", b =>
                {
                    b.HasOne("SistemaAcademia.Dados.Entidades.Aluno", "Aluno")
                        .WithMany("Telefones")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Mensalidade", b =>
                {
                    b.HasOne("SistemaAcademia.Dados.Entidades.Aluno", "Aluno")
                        .WithMany("Mensalidades")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Treino", b =>
                {
                    b.HasOne("SistemaAcademia.Dados.Entidades.Aluno", "Aluno")
                        .WithMany("Treinos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.TreinoExercicio", b =>
                {
                    b.HasOne("SistemaAcademia.Dados.Entidades.Exercicio", "Exercicio")
                        .WithMany("Treinos")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaAcademia.Dados.Entidades.Treino", "Treino")
                        .WithMany("Exercicios")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Aluno", b =>
                {
                    b.Navigation("Mensalidades");

                    b.Navigation("Telefones");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Exercicio", b =>
                {
                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Plano", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("SistemaAcademia.Dados.Entidades.Treino", b =>
                {
                    b.Navigation("Exercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
